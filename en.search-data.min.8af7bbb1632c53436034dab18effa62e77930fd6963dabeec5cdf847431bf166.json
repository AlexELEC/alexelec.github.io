[{"id":0,"href":"/docs/alexelec/docs/about/","title":"About","section":"LibreELEC/CoreELEC (ae-fork)","content":" Downloading Images and System Updates # LibreELEC CoreELEC Sources # LibreELEC CoreELEC Differences from Original Versions # Default SSH (login/password): root/mcpc Automatic system update feature removed from «LibreELEC/CoreELEC» settings. File manager «Midnight Commander» and utility «htop» integrated into the system. «HID-Remote» service added for configuring HID remote controls. Packages (dependencies) added for «TVLINK IPTV server» operation. «TVLINK IPTV server» can be downloaded, activated, or deactivated in system settings. «PVR TVLINK Client» integrated into the system. For «Kodi»:\nPVR-API added for «PVR TVLINK Client». Channel switching speed optimized. The ability to automatically change audio and video stream parameters has been added, which is necessary for «TVLINK» when it switches the stream for the same channel. Repository «AlexELEC Common Add-ons» added, from which you can install add-ons: «TVLINK Simple Control», «Keyboard Layout», and others. LibreELEC\nThe ability to install packages from the «Entware» repository has been added to this system (this feature is default in CoreELEC).\nCoreELEC\nThe remote control configuration file (remote.conf) can be located in the «/storage/.config/amremote» or «/storage/.config directory». The latter has priority.\n"},{"id":1,"href":"/docs/android/docs/about/","title":"About","section":"Kodi for Android","content":" Downloading APK packages for «Kodi» # Kodi APK Sources # Kodi sources Differences from the original «Kodi» version # Added PVR API for «PVR TVLINK Client».\nBuilt-in PVR clients: «PVR TVLINK Client» / «PVR IPTV Simple».\nAdded the ability to automatically change audio and video stream parameters, which is necessary for «TVLINK» when it changes the stream for the same channel.\nOptimized channel switching speed.\nRemoved the «Busy dialog» when turning on/switching channels.\n«TVLINK Simple Control», «Keyboard Layout» and other add-ons can be downloaded from here.\n"},{"id":2,"href":"/docs/tvlink/docs/overview/","title":"Overview","section":"TVLINK","content":" General info # «TVLINK Server» is an IPTV channel repeater and aggregator with a user-friendly web interface. It retransmits streams specified by the user from sources such as IPTV playlists, Acestream, Ministra/Stalker Middleware, or add-ons.\nThe main goal of the program is to provide uninterrupted operation of IPTV channels. You can automatically or manually combine streams of a single channel from various sources, and «TVLINK», depending on the source\u0026rsquo;s priority and its operability, will select and retransmit the best stream.\nIf the previous stream stops broadcasting for any reason, the program will automatically switch to the next available stream of the same channel. This cycle will continue as long as at least one stream from the set is working.\nThe program supports IPTV archives (catchup) with the ability to switch to the next stream, even if the archive types in these streams differ. Any IPTV player with support for the «Shift» archive type is suitable for this function. Even if such a player does not support other archive types (Append, Flussonic), it will still play them due to the internal conversion of archive types in «TVLINK».\nThe program also provides:\nconvenient setup and provision of EPG (Electronic Program Guide in XMLTV format) built-in API for independent add-on development unlimited number of users and IPTV sources (depends only on hardware capabilities) ability (using profiles) to provide different sets of channels to different users edit (change name, disable, delete) channels, groups (individually or in groups) sort, set numbers for channels and groups, set icons for channels ability to automatically (on a schedule) update channel sources and EPG protection of your channels from unauthorized access using «tokens» stream status and program log in the web interface The program uses the Python module «Streamlink». This, in turn, makes it possible to use a large number of add-ons for «Streamlink» itself (those that do not require the support of the «webbrowser» submodule). For example, watch live broadcasts of TV channels from YouTube and many other sources.\n«TVLINK» can be used with any IPTV player, but to get all the benefits of the server, you should use «PVR TVLINK Client» for Kodi.\nProgram limitations. The program does not work in Russia and Belarus. However, if you do not support Russian aggression in Ukraine, create a file named «Glory_to_Ukraine» in the main «TVLINK» directory, for example:\ntouch /opt/tvlink/Glory_to_Ukraine This way, you will disable geolocation checking when the program starts.\n«TVLINK» releases are compiled only for «Linux». The following architectures are supported:\nx86-64 arm7 aarch64 The program does not require many resources. For example, when serving two clients, it averages 70 MB of RAM usage.\n"},{"id":3,"href":"/docs/alexelec/docs/hid-remote/","title":"HID Remote Control Configuration","section":"LibreELEC/CoreELEC (ae-fork)","content":" HID Remote Control Configuration in «LibreELEC/CoreELEC» (ae-fork) Systems # A \u0026ldquo;Human Interface Device\u0026rdquo; (HID) remote control refers to a remote control that functions as a standard keyboard or mouse input device. It allows users to interact with a computer or other device by emulating standard input actions like keyboard key presses or mouse clicks.\nHID remote controls have some advantages over IR remotes. Firstly, you do not need to point the remote at the signal receiver. Secondly, HID remotes (as they emulate a keyboard) support the «long press» function. This means that one button can be programmed for two different actions.\nThis instruction concerns «G20S PRO» (USB 2.4G) and «G20S PRO BT» (USB 2.4G + Bluetooth) remote controls, which do not differ in appearance but have different button codes. We will only use the «USB 2.4G» interface.\nThe «HID-Remote» service uses the «hid_mapper» utility.\nAttention! After the system is turned off, the remote goes to sleep mode. This saves battery power, but upon the next power-on, you need to press any button several times for the remote to wake up.\nIf you press the keyboard/mouse switch button, this will change the button codes that the remote control sends. Accordingly, some buttons may stop working.\n«HID-Remote» Service # All settings are located in the «/storage/.config/hid_remote/» directory. Hereafter, all file paths will be relative to this directory.\nFor «G20S PRO/G20S PRO BT» remotes (and for some others), a configuration already exists in the system. You only need to replace the contents of the «remote.map» file with the contents of the «sample/Gi20sPRO.map» or «sample/Gi20sPRO-BT.map» file (for G20S PRO BT) and specify the values for the «MANUFACTURER» and «PRODUCT» variables in the «device.conf» file. The corresponding values for these variables are also located in the mentioned «map» files. After that, you will only need to enable the «HID-Remote» service.\nWhen the «HID-Remote» service is activated, the «Eventlircd» service will be disabled. This is done to prevent the double triggering effect of the remote control buttons.\nManual Configuration for the «HID-Remote» Service # If you have a remote of another model, you do not need to configure all of its buttons. Usually, only two or three buttons may not work because they send the press code of several keys at once. This may also be necessary if you want to remap the action of a specific button.\nStop the «Kodi» and «Eventlircd» services by executing the following commands in the terminal:\nsystemctl stop kodi systemctl stop eventlircd In the «device.conf» file, you need to set the values for the «MANUFACTURER» and «PRODUCT» variables for your HID device. To do this, execute the command (there is a hint in the device.conf file):\nhid-remote --list-devices --lookup-id If you do not have other input devices connected (besides the remote), you will see something like this:\nHere, two devices with the same «Manufacturer/Product name» values are shown — this is because the remote is identified as both a keyboard and a mouse.\nEnter the obtained values into the «device.conf» file.\nMANUFACTURER=\u0026quot;1915\u0026quot; PRODUCT=\u0026quot;1025\u0026quot; Now, let\u0026rsquo;s configure the «remote.map» file by mapping the remote button codes to the desired keyboard keys.\nThe format of the «remote.map» file is:\nRemote_Button_Code:Keyboard_Key_Name For example:\n024100:KEY_ENTER Let\u0026rsquo;s determine the code of the required remote button. To do this, execute the following command:\nhid-remote --lookup-id --learn --manufacturer \u0026lt;MANUFACTURER\u0026gt; --product \u0026lt;PRODUCT\u0026gt; Here, you need to substitute the values of the «MANUFACTURER» and «PRODUCT» variables that we obtained earlier. Press the desired button on the remote and get its code.\nThe example below shows the code for the «OK» button.\n02 41 00 - button press code 02 00 00 - button release code (it will be the same for almost all buttons) We need the first code. Write it to the «remote.map» file without spaces.\nIn the «sample/keys.sample» file, you will find all the necessary keyboard key names.\nAfter editing the «device.conf» and «remote.map» files, activate the «HID-Remote» service in the system settings.\nThe «Power» Button # Usually, the «Power» button on the remote control functions the same way as the «Power» button on the computer case: it immediately turns off the computer. If this behavior does not suit you, and you wish for this button to bring up the «Shoutdown» menu (for example, for setting a timer), follow these steps:\nCopy the file «/etc/systemd/logind.conf» to the directory «/storage/.config/logind.conf.d».\nEdit the following line in the copied file:\nHandlePowerKey=ignore To make the changes take effect, you need to reboot the system.\n"},{"id":4,"href":"/docs/tvlink/docs/install/","title":"Installation","section":"TVLINK","content":" Installation \u0026amp; Update # «TVLINK» releases are compiled only for «Linux».\nThe program uses «Streamlink» Python modules, therefore the following must be installed on the system:\nPython. The required «Python» version is specified in the release title. «Runtime» dependencies for «Streamlink», which you can see here. You do not need to install «Streamlink» itself, and it is not recommended. This will cause conflicts in the program\u0026rsquo;s operation. The «Streamlink» modules are part of «TVLINK».\nLibreELEC/CoreELEC LibreELEC/CoreELEC # Modified systems (ae-fork) are implied, in which all the necessary dependencies are already present. The program cannot function in the original ELEC systems.\nIn the system settings (\u0026ldquo;LibreELEC/CoreELEC\u0026rdquo; -\u0026gt; \u0026ldquo;TV services\u0026rdquo; -\u0026gt; \u0026ldquo;TVLINK server\u0026rdquo;), click \u0026ldquo;Enable TVLINK\u0026rdquo;. The program will be installed and started automatically.\nUbuntu/Debian/Armbian Ubuntu/Debian/Armbian # Remember that the corresponding version of «Python» must be installed on the system. The «Python» version is specified in the filename. For example: TVLINK-4.2.4-x86_64-python_3.12-Ubuntu.deb.\nFor these x86-64 architecture systems, you can download and install «TVLINK» using a deb package. Download the required file and enter the commands in the terminal:\napt install ./TVLINK-4.2.4-x86_64-python_3.12-Ubuntu.deb systemctl start tvlink systemctl enable tvlink Armbian (aarch64) # You can also install «TVLINK» from an archive.\nFor example, «Armbian Minimal/IOT Distro: Debian 12 (Bookworm)» for Amlogic S912.\n«TVLINK» uses the \u0026ldquo;ping\u0026rdquo; utility. We will install it, as well as some utilities that we will need.\napt install -y mc tar bzip2 wget iputils-ping Let\u0026rsquo;s install the dependencies for «Streamlink» (python3-streamlink). This can be done with a single command:\napt install -y $(apt-cache depends python3-streamlink | grep Depends | sed \u0026quot;s/.*ends:\\ //; s/\u0026lt;.*\u0026gt;//\u0026quot; | tr '\\n' ' ') Here, the command «apt-cache depends python3-streamlink» outputs information about the dependencies of the «Streamlink» modules, and «grep, sed, tr» create a list from it that is passed to «apt install».\nLet\u0026rsquo;s download and install «TVLINK».\nmkdir -p /opt/tvlink cd /opt wget https://github.com/AlexELEC/TVLINK-Releases/releases/download/4.2.4/TVLINK-4.2.4-aarch64-python_3.11.tar.bz2 -O TVLINK.tar.bz2 tar -jxf TVLINK.tar.bz2 --directory /opt/tvlink rm -f TVLINK.tar.bz2 Let\u0026rsquo;s run «TVLINK» to check:\nroot@armbian:/# /opt/tvlink/tvlink — Starting TVLINK (version: 4.2.4) on 127.0.0.1:2020 / 192.168.1.33:2020 — It is recommended to go to the web interface (for example: http://192.168.1.33:2020), add channels, and check their operation. Errors related to dependencies can only be seen in the terminal; they are not recorded in the «TVLINK» log.\nIf everything is fine, terminate «TVLINK» (Ctrl+C) and add it to the system autostart.\nwget https://github.com/AlexELEC/TVLINK-Releases/raw/refs/heads/main/scripts/Ubuntu/tvlink.service -O /etc/systemd/system/tvlink.service systemctl enable tvlink systemctl start tvlink OpenWRT (х86-64) OpenWRT (х86-64) # A simple way to install the OpenWRT system for the x86-64 architecture is described here.\nThe «OpenWRT» version for which the program is compiled is specified in the release description.\nLet\u0026rsquo;s update the package repositories and install the dependencies for the «Streamlink» module, which is included in «TVLINK». Enter the following commands sequentially in the terminal:\nopkg update opkg install python3 python3-certifi python3-chardet python3-cryptodome python3-pip python3-requests python3-six python3-lxml tar wget python -m pip install --upgrade pip pip install pycountry isodate pysocks Let\u0026rsquo;s download and install «TVLINK» itself.\nwget https://github.com/AlexELEC/TVLINK-Releases/releases/download/4.2.4/TVLINK-4.2.4-x86_64-python_3.11-Openwrt.tar.bz2 -O TVLINK.tar.bz2 mkdir -p /opt/tvlink tar -jxf TVLINK.tar.bz2 -C /opt/tvlink rm -f TVLINK.tar.bz2 Let\u0026rsquo;s check if the program works.\n/opt/tvlink/tvlink — Starting TVLINK (version: 4.2.4) on 127.0.0.1:2020 / 192.168.1.1:2020 — It is recommended to go to the web interface (for example: http://192.168.1.1:2020), add channels, and check their operation. Errors related to dependencies can only be seen in the terminal; they are not recorded in the «TVLINK» log.\nIf «TVLINK» works without errors, close it (Ctrl+C). Download and add the service to autostart.\ncd /etc/init.d wget https://github.com/AlexELEC/TVLINK-Releases/raw/refs/heads/main/scripts/Openwrt/tvlink -O /etc/init.d/tvlink \u0026amp;\u0026amp; chmod +x /etc/init.d/tvlink service tvlink enable service tvlink start Program Update # Read here on how to update the program.\n"},{"id":5,"href":"/docs/alexelec/docs/entware/","title":"Entware","section":"LibreELEC/CoreELEC (ae-fork)","content":" Entware # The «Entware» repository provides the ability to easily install additional software on «LibreELEC/CoreELEC» systems.\nA list of available packages can be viewed here.\nExample of installing the «BitTorrent» client «Transmission» # Installing «Entware»:\ninstallentware At the end, the following question will appear:\nWould you like to reboot now to finish installation (recommended) [y/N]? For now, answer «No», just press «Enter».\nInstalling «Transmission»:\nopkg install transmission-web Rebooting the system:\nreboot In your browser, enter the address «http://your-ip-address:9091» and use it.\nIf you need to remove «Entware»:\nsystemctl stop entware rm -fr /opt/* reboot "},{"id":6,"href":"/docs/tvlink/docs/quick-start/","title":"Quick Start","section":"TVLINK","content":" Quick Start # This implies that all settings are set by default.\nAfter installing and running the program, enter the address «http://ip-address:2020» in your browser. Where «ip-address» is the address of the computer on which «TVLINK» is installed.\nActivate «Playlists sources» and click the «Add playlist» button.\nIn the «Add new playlist» form, specify the playlist name (Playlist name) and the URL address or file path (Playlist path) of this playlist.\nthe playlist name must be in Latin letters, without special characters, and must not start with a digit the file path must start with «file://», for example: file:///Data/Media/playlist.m3u After confirmation (Save changes), activate the «Add channels» switch for this channel source and click the «Update» icon.\nAs a result of these actions, all channels from your playlist will be added to «TVLINK», specifically to the «Channels» page (so-called «mapping» of channels). This will already be sufficient to start watching channels.\nOn the «About» page, you can download the playlist (M3U Playlist) and open it in any IPTV player, for example VLC. Or, on the «Channels» page, in the «ID» column, you can click the blue triangle (Play) and watch the channel directly in the web interface.\n"},{"id":7,"href":"/docs/tvlink/docs/sources/","title":"Channel Sources Configuration","section":"TVLINK","content":" Channel Sources Configuration # On the «Sources» page, you have the ability to configure the following:\nPlaylists sources Addons sources Stalker/Ministra portals sources AceStream sources Channel picons XMLTV EPG sources User Profiles Playlists Sources # Activate the «Playlists sources» switch. Click the «Add playlist» button.\nIn the «Add new playlist» window:\nEnter the playlist name. It must consist of Latin letters, without special characters (spaces, hyphens, etc.), and cannot start with a digit. Enter the playlist URL. If the playlist file is saved on your local computer, the address format should be as follows: «file:///path_to/your_playlist_file» (for example, file:///Data/list/playlist.m3u). Click the «Save changes» button.\nAddons sources # Click the «Add addon» button. In the «Add new addon» window, click (double-click may be required for some browsers) in the «Addon name» field. The list of available addons in the repository will appear. Select the desired addon and click «Save changes».\nYou can also create your own addon. Refer to the following section for instructions on how to do this.\nStalker/Ministra portals sources # Click the «Add portal» button. In the «Add new Portal (Stalker Middleware)» window, enter the following data:\nPortal name. It must consist of Latin letters, without special characters (spaces, hyphens, etc.), and cannot start with a digit. Portal url. MAC address for portal access (User MAC). The optional «Use HLS streams» toggle allows receiving HLS streams if the Portal supports this method. During the creation stage, it is recommended not to enable this option if there is no certainty that the Portal supports HLS streams.\nAfter you click the «Save changes» button, a file with your portal\u0026rsquo;s name will be created in the «tvlink/scrapers» directory. For example, «tvlink/scrapers/Portal.py». This file contains three variables that you can edit (this is optional):\nINCLUDE_GROUP is a list of channel groups that you want to receive. All other groups will be ignored (will not be included in the list). Please note that an exact match will be checked, considering the case of the characters.\nEXCLUDE_NAME is a list where you can specify characters that will be excluded from the channel name. For example, if the channel name is «US Discovery HD», and you want to have «Discovery HD», set EXCLUDE_NAME = [\u0026lsquo;US \u0026lsquo;]. Note that in this example, there is a space at the end of \u0026lsquo;US \u0026lsquo;.\nDEFAULT_LOGO is the URL address of the icon that will be applied to channels where the icon is missing, or if the «Disable load icons» option is enabled in the source settings.\nAfter editing these variables, you need to click «Apply Settings» on the «Settings» page, or restart the application.\nAfter creating the Portal, you can change the «Portal url», «User MAC», «Use HLS streams», «Disable load icons», and «Repeat source streams» options without restarting the settings. However, you need to update the source (click the «Update» icon).\n«Disable load icons»: disables fetching channel icons from the portal. Some portals may have non-valid icon addresses specified. This leads to a delay (depending on your browser) in displaying channel lists in the program\u0026rsquo;s web interface.\n«Repeat source streams»: allows setting the number of stream playback repetitions during failures. This option is unrelated to the Streamlink option, «Stream retry count». Value «always» — repetitions are unlimited, «0» — the function is disabled (default), other values — the number of repetitions.\nIf your channel has only one stream and if that stream is working in some way, «TVLINK» will endlessly try to restart that stream. The «Repeat source streams» function does the same for the source (the stream of this source) of a channel where there is more than one stream. Thus, switching to the next stream of this channel will occur if either the stream has completely stopped working or after the number of repetitions you have selected. If «always» is selected — then only if the stream has stopped providing anything at all.\nAceStream sources # Click the «Add Acestream» button. In the «Add new AceStream source» window, enter:\nSource name. It should be in Latin letters, without special characters (spaces, hyphens, etc.) and cannot start with a digit.\nThe URL address of the «AceStream» server in the format http://ip-address:port (for example: «http://192.168.1.1:6878»).\nThe optional «Use HLS streams» switch allows receiving HLS streams. It is not recommended to enable if the «AceStream» server is running on your local network, as this will significantly increase the channel switching time.\nAfter you click the «Save changes» button, you can enter the channel group(s) you want to receive in the «Channel Categories (comma-delimited)» field in the source settings. This field is empty by default, which means that all channels from all groups will be loaded (approximately 3000 of them). You can find the names of the official groups here. Users who broadcast streams can create their own group names or completely ignore group creation. Therefore, if you need all the channels that are in the «AceStream» database, then leave the «Channel Categories (comma-delimited)» field empty.\nThe channel database is loaded directly from the «AceStream Server-side Search API» and does not depend on other resources (for example: pomoyka.i2p).\nSources Table # After the channel source is created, you will see the following table:\n«Name» – the name of the source, settings and deletion of this source. When the source is active and updated, its name becomes a link to editing (\u0026lsquo;mapping\u0026rsquo;) the channels for this source. The settings icon is displayed in blue if the source has default stream settings, and in green if the user has changed the parameters. «Catchup» – archive selection. Supported types: «Append», «Shift», and «Flussonic». «Enable» – enables or disables the source. «Prio» – source priority. The smaller the value, the higher the priority. «Limit» – limits client access to the source. The value is the maximum number of clients who can watch simultaneously from this source. «Add channels» – if this switch is enabled and you update the source, all the source\u0026rsquo;s channels will be automatically added to the «TVLINK» channel list (\u0026lsquo;channel mapping\u0026rsquo;). This only works with manual (forced) channel updates, but this option is ignored during automatic updates. «New channels» – if this switch is enabled, new channels will be added to the «TVLINK» channel list upon source update, if they appear in this source. «Update period» – time (in hours) after which the source will be automatically updated. Zero means that the update is disabled. «Update» – immediate update of the source, as well as the time of the last update. «Links» – the number of links to streams (channels) that this source contains. Adding Channels to the List # There are two ways you can add channels from the source to the «TVLINK» channel list (channel mapping):\nEnable the «Add channels» switch and click «Update». In this case, all the source\u0026rsquo;s channels will be automatically added to the «TVLINK» channel list. Update the source by clicking «Update». After this, the source name becomes a link to a page where you can add channels manually. The «Map» switch adds a channel to the «TVLINK» channel list; when adding channels, a group is created to which the channel belongs, and its icon is transferred.\nAutomatic Channel Merging # «TVLINK» automatically merges channels with the same names. Therefore, the number of source channels («Links») does not always correspond to the number of channels in the «TVLINK» list. During merging, character case and spaces in the channel name are ignored. For example, all channels with the following names will be considered one and the same channel:\nChannel 25 CHANNEL 25 ChaNNel25 If channel groups are present in the source, they will also be exported. If there are no groups, all channels from the source will be assigned a group with the name of the source itself.\nChannel Archives (Catchup) # If your IPTV provider offers this feature, select one of the archive types:\n«Append» «Flussonic» «Shift» «none» — means the function is disabled. You can find out what type of archive you have from your IPTV provider.\n«TVLINK» supports automatic switching of archive streams during a failure, regardless of the archive types. This means that if there is a problem with an archive stream from a source where the type is «Shift», it will switch to an archive stream from a source with «Flussonic». The switching order depends on the priority of the sources. That is, the same functionality as with regular streams.\nIf you are using a third-party IPTV player (not PVR TVLINK Client), you need to set the archive type to «Shift» in its settings. That is, «TVLINK» itself, regardless of the archive type of the source, will output archives in the «Shift» format.\nSource Priority (Prio) # If both sources contain the same channel, the stream from the source with a higher priority (lower number) will be used first. If this stream is not working or has stopped broadcasting during operation, «TVLINK» will switch to the next source with a lower priority, and so on, in a loop.\nSource Connection Limit (Limit) # If the source has a limit on the number of connections to streams, set the required value. This is necessary so that your IPTV provider does not block your access. «TVLINK» will automatically switch to the next stream if the limit is exceeded.\n«TVLINK» switches channels in asynchronous mode; this means that the program does not wait for the previous stream to close before opening the next one. Otherwise, channels would switch very slowly. Client identification occurs via their IP addresses. These two facts impose certain limitations on the operation of the «Limit» option. Namely: for clients who have the same IP address, «TVLINK» automatically increases the connection limit. In the program\u0026rsquo;s operation log, you will see the following entry:\nIncrease MaxStream count [1+1 HD] from [MySouce]: set max stream [2] - limit [1] This means that a limit of one connection is set for the «MySouce» source. But since the previous stream has not yet closed when switching channels, «TVLINK» automatically increased the limit (by one). If this had not happened, the «MySouce» source would not have been available at that moment.\nAlso, if two clients have the same IP address (two IPTV players are running on the same machine) and make a request to the same source, the limit of this source will also be increased by one. This is because «TVLINK» cannot determine whether it is a request to switch channels from the same client or a request from another client, as their IP addresses are the same.\nBottom of the «Sources» Page # «Update all sources» – click if you need to update all channel sources at once. If the «Create static playlist» option is enabled in the server settings (Settings), a static playlist will also be created. «Create static playlist» – if you have the «Create static playlist» option enabled in the settings (Settings page), the «Create static playlist» link will appear at the bottom of the sources page (Sources). This allows you to update the static playlist without updating all sources. "},{"id":8,"href":"/docs/tvlink/docs/epg/","title":"Electronic Program Guide","section":"TVLINK","content":" Electronic Program Guide # EPG configuration needs to be performed after you have added channels in «TVLINK» (channel mapping).\nYou can use the EPG sources that are already present in the program (EPG Static sources), or create your own (EPG Custom sources). Activate the required switch.\nTo create a custom source, click the «Add EPG» button and complete the «Add new EPG» form.\n«EPG name» — any name of your choice. It must consist of Latin letters, without special characters (spaces, hyphens, etc.) and cannot start with a digit. «EPG url» — the address of the XMLTV file. It can be archived (.tar.gz) or not archived (.xmltv). Click «Save changes» to save the settings.\nOptions # «Name» — the name of the source and a link (when the source is active and updated) to edit (match) channels for this source. «Enable» — enabling/disabling the source. «Prio» — priority. If several sources are active, «TVLINK» will search for matches between channels and programs in the order of source priority. Items not found in the first source will be searched for in the second, and so on. «File date» — if the XMLTV source provides such information, the creation date of the source\u0026rsquo;s XMLTV file will be indicated here. If such information is not provided, the date of the last file download will be indicated here. «Update» — information about the last channel matching and program creation, as well as the «Update» button. Its actions are limited to downloading and automatically matching channel names with the program. This allows you to manually match those channels that «TVLINK» could not match automatically, or change the automatic matching if needed. «Channels» — the total number of channel names in the source is displayed here. This is for informational purposes only, as not all channels listed in the source necessarily include program data. Buttons # «Create EPG» — generates the program. The XMLTV file will be available at: «http://ip-address:port/xmltv» «Clean manual EPG mapping» — clears all the mappings you have done manually. After you have clicked the button in the «Update» column, you can follow the link from the «Name» column and match the channels that «TVLINK» could not match, or change the matching of channels that do not meet your requirements.\n«Auto EPG mapping» — this column displays the names of channels from the XMLTV source that «TVLINK» has automatically matched. «Manual EPG mapping» — this is where you can manually match channels. After sorting the table by the «Auto EPG mapping» column, we will get all the channels that were not automatically matched at the top of the list (for convenience).\nSince the drop-down list of the «Manual EPG mapping» column contains all the channel names from the EPG source, finding the required one is quite difficult. To simplify the task, you need to enter the first letters of the channel name and the list will move to the desired position.\nAfter setting up, return to the «Sources» page and click the «Create EPG» button.\nIn the «EPG Static sources», you have the option to change the URL address if needed. To do this, click the «Edit» icon next to the source name.\nThe update frequency of EPG sources is set on the «Settings» page in the «EPG settings» section.\n"},{"id":9,"href":"/docs/tvlink/docs/profiles/","title":"User Profiles","section":"TVLINK","content":" User Profiles # Profile settings need to be configured after you have added channels to «TVLINK» (channel mapping).\nUser profiles allow you to have different sets of channels and groups for different clients. Channels and groups in profiles are taken from the main set of channels on the «Channels» page (main profile), so you first need to add all the channels that you might need in profiles to «Channels».\nAlso, when creating a profile, you can set the IP address for the streams and playlists of this profile and an authentication token, if necessary.\nClick the «Add user» button in the «User Profiles» section and fill out the «Add user profile» form.\n«User» — The client\u0026rsquo;s name. It must consist of Latin letters, not contain special characters (spaces, hyphens, etc.), and cannot start with a digit. «Playlist IP» — The address that will be used for the playlists and streams of this profile. «Token for playlist/streams» — The token that will be used for the playlists and streams of this profile if the «Authentication Token» option is activated. If this field is left empty, a token will be created automatically. «Comment» — Any comment. Apart from the «User» field, filling in all other fields is optional.\nAfter confirming the changes («Save changes»), the profile name («User») becomes a link. Clicking on this link opens the group and channel settings of the profile.\nYou can disable groups and individual channels that should not be in this profile, or enable the necessary ones.\nThe «Settings» icon next to the profile name allows you to change all options (Playlist IP, Token, Comment).\nAfter any changes to the «Tokens» settings, you need to apply the settings («Apply Settings» at the bottom of the page) or restart the application.\nIf you have the «Create static playlist» option enabled, then after any changes to the «Tokens» or Playlist IP settings, do not forget to update the static playlists (click «Create static playlist» on the «Sources» page).\nThe «Delete» icon deletes the profile.\nIn the «Playlist URL» column, the links to the profile\u0026rsquo;s playlist are displayed in the following format:\nhttp://\u0026lt;ip-address\u0026gt;:\u0026lt;port\u0026gt;/\u0026lt;token\u0026gt;/playlist/\u0026lt;user\u0026gt; token – if «Authentication Token» is activated user – profile name For «PVR TVLINK Client», it is sufficient to specify the profile name and token in the settings.\n"},{"id":10,"href":"/docs/tvlink/docs/channels/","title":"Channels","section":"TVLINK","content":" Channels # This information pertains to the settings on the page «Channels».\nChannel lists on all interface pages are displayed in batches of 200 channels per page (there are buttons at the bottom for navigating between pages). When channels are deleted or linked, the pages themselves are not refreshed; only the elements are removed. This is done to speed up performance, so you don\u0026rsquo;t have to wait for the page to reload after each action. However, this can lead to some confusion. For example, if you have a list of 300 channels: 200 channels on one page and 100 on the other, if you delete 10 channels from the first page, you will see 90 channels when you navigate to the second page. When the page is refreshed, the list is read again, and the first page will again have 200 channels, while the second will have the rest.\nBefore performing the setup on this page, please wait for it to load completely. Links to channel logos from some sources may not work, which increases the page loading time in the browser. Your changes will not be applied until the page is fully loaded.\nJust keep this in mind while editing.\nChannel Logos # To set or change a channel logo, click the icon in the «Logo» column. In the form that appears, you can specify the URL address of the desired image and click «Save changes». It is preferable to use images in «png» format, but other formats (jpg, gif, bmp) are also allowed.\nIf you have copied your own channel logos to the «tvlink/logos» folder, then by clicking the «Local logos» button, you can associate a channel logo.\nThe highest priority is given to icons located in the «tvlink/logos» directory and having the format «Channel-ID.png» (for example: 7B7ADBFF.png). You can see the «Channel-ID» in the «ID» column. If such an icon does not exist, «TVLINK» uses the icon you specified above.\nIf a channel does not have an icon, it will be automatically added when you perform a force update of any source with the «Add channels» option enabled, provided that the channel names match and the source has an icon for that channel.\n«picons» utility # Allows you to download channel icons from the «epg.one» website and automatically converts the logo names into a format understandable for «TVLINK» (for example: 7B7ADBFF.png).\nThe utility is console-based and is launched in the terminal. It is located in the «tvlink» directory, so you need to specify the full path to it. For example:\n/storage/.config/tvlink/picons Arguments Reference:\n/patch_to/tvlink/picons -h Running the «picons» utility without arguments downloads and converts «transparent» icons.\nThe same action – downloading and converting icons – can also be performed in the «TVLINK» web interface on the «Sources» page.\nSelect the necessary options and click «Create picons».\nChannel Numbers # In the «Num» column, you can specify channel numbers. You can specify a number for only one channel or not specify any at all. In the playlist, channels will still be assigned numbers (in alphabetical order of channel names). If a number is specified for at least one channel, the numbering will start from it. If no number is specified for any channel, the numbering will start from one.\nChannel Names # In the «Name» column, you can edit channel names. Changes take effect immediately after the row with the channel name loses focus.\nChannel Groups # In the «Group» column, you can change the group to which a channel belongs. Groups are selected from a list.\nIf you need to change the group for several channels at once:\nPlace checkmarks in the «Clean» fields next to the channels whose group you want to change. Change the group for one of the checked channels. This will change the group for all selected channels. Clicking on the «Clean» label itself removes the checkmarks from all selected channels. This is in case you made a mistake in your selection.\nChannel Parameters # Icons in the «Control» column (from left to right):\n«Info» – channel information and stream management «Join» – joining channels and their streams «Break» – disconnecting channels «Delete» – deleting channels «Info» # If you need to disable or enable any channel streams, move the «Enable» switch to the desired position.\nIn this table, the streams (links) are arranged in order of their priority. That is, in the sequence in which «TVLINK» will switch between them if a failure occurs in the preceding stream.\n«Join» # «TVLINK» automatically merges channels with the same names. The case of characters and spaces in the channel name are ignored. You can also merge channels manually. To do this, you need to select the channels (in the «Clean» column) that you would like to add and click «Join» on the channel you want to merge them with.\n«Break» # This procedure is the opposite of the previous one.\n«Delete» # Deletes the channel from the «Channels» list. In doing so, the channel becomes available again in its source.\nChannel IDs # This column displays the unique identifier of the channel and contains a direct link to this channel. This link can be pasted into a player (for example, VLC) to play the channel or simply record the stream in a browser. To then play the recorded channel in a player, add the «.ts» extension to the file.\nThe «Play» icon next to the channel «ID» opens a simple web player. This is for convenience when you need to test the channel. The web player does not support stream switching and may also not play some channels.\n«Delete channels» at the bottom of the page removes all channels from the «Channels» list.\n"},{"id":11,"href":"/docs/tvlink/docs/gpoups/","title":"Channel Groups","section":"TVLINK","content":" Channel Groups # This information pertains to the settings on the «Groups» page.\nGroups # Buttons:\n«Create new group» – allows you to create a new group. The new group becomes available on the «Channels» page. «Clean all groups» – deletes all groups without exception. Table:\n«Title» – the group name. If you change the group name, the group name of all channels belonging to this group will also change (this refers to the «Channels» page). If another group is given the same name, these two groups will be merged into one. «Enabled» – if disabled, all channels of this group will be removed from the «Channels» page, and when updating (or adding new) sources, channels belonging to this group will not be added to the «TVLINK» channel list. If enabled (after being disabled) and the source(s) are updated, the channels of this group will return to «Channels». «Control» – the blue icon allows you to set «Aliases» for the group. The red icon deletes the group. Group aliases are set via a comma. The case of characters in aliases does not matter. You can write: “Films”, “FILMS”, or “FiLmS”. If an alias is specified for a group, then during channel mapping, the source group will be replaced with the original one in the «Channels» list.\nIt is not a complete match with the template (alias) that is checked, but rather the inclusion of a word in the template. For example, if you set the alias “Films and series” for the group “Films”, the following groups will fall into the “Films” group (case-insensitive): “Films and series”, “Series”, and of course, “Films”.\nYou can only delete a group if no channel on the «Channels» page belongs to this group. Otherwise, «TVLINK» will not allow you to do this. You can, for example, first disable the group and then delete it if there are channels in the group.\nSorting Groups # «Sort groups» at the bottom of the page will open these settings.\nThe sorting order is set by a number. The smaller the number, the higher the group is in the list. On the sorting page, all active (not disabled) groups to which at least one channel has been added are displayed, regardless of whether this channel is currently on the «Channels» page. Channel numbering (if present) takes priority over group sorting. To see how the list of channels and groups will look after their sorting/numbering, sort the channels by «Group» on the «Channels» page. This exact order of channels will be in the playlist. The sorting itself (by numbers, names, groups) on the «Channels» page does not affect the playlist; it is only for the convenience of editing channels.\n"},{"id":12,"href":"/docs/tvlink/docs/settings/","title":"Server and Stream Configuration","section":"TVLINK","content":" Server Configuration # This information pertains to the settings on the «Settings» page.\nFor most settings on this page, you need to reread the «TVLINK» configuration for the changes to take effect. There is an «Apply Settings» option at the bottom of the page for this. The «Refresh sources at playlist» and «Remove broken channels» options do not require this.\n«Server port» – defines the port on which «TVLINK» accepts requests. The port for streams will be one greater: «Server port + 1».\n«Playlist IP» – this is the address that «TVLINK» will use for playlists (when «Auto playlist IP» is disabled). The address can be selected from the list.\n«Auto playlist IP» – if this option is enabled, «TVLINK» will use the IP address in the playlist from which the client\u0026rsquo;s request originates.\n«Check internet IP» – the IP address that «TVLINK» uses to check the internet connection. The default address is «8.8.8.8». If you need to change this address before running the program, create a file named «check-internet.ip» in the tvlink directory and enter the required address there.\n«Check internet max time» – the maximum time during which «TVLINK» checks the internet connection. The program will not start until it has internet access.\n«Refresh sources at startup» – refresh sources when the program starts.\n«Refresh sources at playlist» – refresh sources when a playlist is requested.\n«Create static playlist» – creates static playlist files (main and for profiles) in the «tvlink/playlist» directory and serves them upon client requests. This significantly speeds up operation when you have a large number of channels (100 or more). The static playlist is created (updated) each time the channel sources are automatically updated, or when you click «Update all sources/Create static playlist» on the «Sources» page. Static playlists are not created for tokens (Authentication Token).\n«Remove broken channels» – «TVLINK» will automatically delete all channels that are found to be non-functional. Be cautious with this option: if the internet connection is lost, «TVLINK» will start deleting every channel you try to turn on.\n«Authentication webUI» – simple authentication (login/password) for the web interface. After activation, you will immediately see a window to enter your credentials. You need to enter – «admin/admin». After that, you can specify your own login and password in the «Login (webUI)» and «Password (webUI)» fields respectively. If you enter an empty string or less than three characters in the «Login (webUI)» field, the login will be reset to the default value (admin). The same applies to the «Password (webUI)» field: an empty string or less than three characters will reset the password to «admin».\nIP addresses for the «Playlist IP» list are taken from the system. If you need to add an IP address (or a domain name) that is not in the system (for example, if «TVLINK» is running behind NAT), create a file named «ip-address.ext» in the «tvlink/data» directory. Each line of the file must contain one IP address or one domain name. For example:\n100.100.100.100 200.200.200.200 my.own.server.com Authentication Token for Streams and Playlists # Protection against unauthorized access to streams and playlists.\n«Authentication Token» – enables support for authentication tokens. «Main Token for playlist/streams» – any sequence of case-sensitive Latin letters and/or digits. After any changes to the «Tokens» settings, you need to apply the settings («Apply Settings» at the bottom of the page) or restart the program.\nIf you have the «Create static playlist» option enabled, then after any changes to the «Tokens» settings, do not forget to update the static playlists (click «Update all sources» on the «Sources» page).\nIf the «Authentication Token» option is activated, after applying the settings, access to streams and playlists will only be possible via the token. The token for the main playlist is set on the «Settings» page.\nOther tokens are set in the «User Profiles» section.\nPeriodic Settings Reload # This function reloads the «TVLINK» settings at specified time intervals. This action is similar to clicking the «Apply Settings» button at the bottom of the page. It does not restart the program itself, but only re-initializes all settings. However, this helps to clear the RAM and close all network connections (sockets). Therefore, this function can be useful when the server operates 24/7.\n«Reload by interval» – reloads the «TVLINK» modules after a time interval (in hours) specified in the «Reload every hours» parameter. «Reload once a day» – reloads once a day at the time specified by the «Reload at o’clock» parameter. The time specified in these options is approximate. For example, if «Reload once a day» / «Reload at o’clock» is set to 4 o\u0026rsquo;clock, the reload will occur between 4:00 and 5:00.\nThe «Reload once a day» option has a higher priority. If you enable both parameters, the module reload will occur once a day.\nReloads occur only under the following conditions:\nthe number of open network connections (sockets) exceeds 10; the program uses more than 60 MB of RAM for systems with less than 1.5 GB of RAM, and more than 120 MB for systems with more than 1.5 GB of RAM; To avoid problems with stream broadcasting, these functions will only trigger if «TVLINK» is not currently broadcasting (no clients are connected). The module reload will occur immediately after the last client disconnects.\nIf the «Ignore connected clients on Reload» option is enabled, the «TVLINK» modules will be reloaded regardless of whether there are connected clients.\n«Empty channel link» # Allows you to enter your own link to a stream that will be played if none of the main channel links are working.\n«Exclude these lines from channel names when mapping» # Excluding words from channel names. You can exclude any lines from a channel name for automatic linking. The channel name itself remains unchanged, however, during automatic linking, «TVLINK» will discard the part you specified from the name. The delimiter for words that need to be excluded from the name is a comma (without spaces). For example, with these settings, all channels with the following names will be considered the same channel – «Discovery Science HD».\n«Discovery Science HD» «Discovery Science HD orig» «Discovery Science HD PREMIUM+» If there are channels in one source as shown above, then the stream (link to the stream) with the longest name will have the highest priority, i.e., first «Discovery Science HD PREMIUM+», then «Discovery Science HD orig», and lastly «Discovery Science HD».\n«M3U playlist settings» # Allows you to add the elements you need after the «EXTM3U» and «EXTINF» tags in the «TVLINK» playlist. For example, this could be information for periodic updating of the channel list: «refresh=\u0026ldquo;3600\u0026rdquo;». Provided that your IPTV player supports this.\nStream Settings # «Main User-Agent» – sets the default User-Agent. Some IPTV providers may have blocking based on the \u0026ldquo;user-agent\u0026rdquo;. They provide the stream only if the request comes from a specific application. You can specify «TVLINK» so that it identifies itself as another application. The following settings mostly relate to the «Streamlink» module and are responsible for working with streams.\n«Stream Ring buffer» – sets the buffer size for streams (in megabytes). Corresponds to the «ringbuffer-size» parameter in «Streamlink».\n«Chunk size» – sets the fragment size when reading a stream (in bytes). The larger the fragment size, the lower the CPU load. The smaller the fragment size, the faster the stream opens.\n«Threads job timeout» – the time (in seconds) after which the chain of reading/writing stream fragments will be stopped. Partially corresponds to the «stream-timeout» parameter in «Streamlink».\n«General HTTP timeout Connect/Data» – the general timeout (in seconds) used for all HTTP requests, except those covered by other parameters. For understanding: in HLS streams, this will be the timeout for obtaining the segment list. The time (timeout) for connection and the time for receiving data are set separately, respectively. Corresponds to the «http-timeout» parameter in «Streamlink», except that it allows setting different values for connection and data reading.\n«HLS segment timeout Connect/Data» – the timeout (in seconds) used for HLS segments (as well as DASH, etc.). The time (timeout) for connection and the time for receiving data are set separately, respectively. Corresponds to the «stream-segment-timeout» parameter in «Streamlink», except that it allows setting different values for connection and data reading.\n«HLS segment queue threshold» – the multiplication factor of the target duration of the HLS playlist, after which the stream will be stopped prematurely if no new segments are added to the queue after the playlist update. Corresponds to the «hls-segment-queue-threshold» parameter in «Streamlink».\n«Stream retry count» – this option sets the «stream-segment-attempts» and «hls-playlist-reload-attempts» parameters for «Streamlink». That is, the number of download attempts for segments and the segment list.\n«Segment threads» – the number of parallel segment downloads. This is the size of the thread pool used for downloading segments. Corresponds to the «stream-segment-threads» parameter in «Streamlink».\n«Segments Queue» – the size of the segment queue. In «Streamlink», it is fixed at 20 segments. But this is too much for Live streams. The smaller the queue, the sooner streams will close, and there will also be less RAM consumption and fewer open sockets. It is better to set it to «as threads», which corresponds to the number of «Segment threads» but not less than 6 segments.\n«HLS live edge» – specifies how many HLS segments need to be downloaded when the stream starts. Corresponds to the «hls-live-edge» parameter in «Streamlink».\n«HLS playlist reload time» – controls the time after which a request is made to update the segment list. Partially corresponds to the «hls-playlist-reload-time» parameter in «Streamlink». The «segment» parameter has the same meaning as in «Streamlink». The «duration» value corresponds to «default» in «Streamlink». The «average» value is the average time of two segments. The «default» value is either one of the values corresponding to «duration» / «segment», or, if they are not present, the set time is 6 seconds.\n«HLS Stream Data» – if activated, immediately transfers data from the segment to the output buffer during download. Channels open quickly, without prior buffering before starting. If disabled, data is transferred only after the first segment is downloaded. Corresponds to the «hls-segment-stream-data» parameter in «Streamlink».\n«HLS Live Restart» – if active, go to the beginning of the live broadcast or as far back as possible. Corresponds to the «hls-live-restart» parameter in «Streamlink».\n«Debug Streams» – adds the «Streamlink» module\u0026rsquo;s log to the «TVLINK» log. The log file is located in the «tvlink/log» directory.\n«Sources Proxy» and «Streams Proxy» – allow you to set a proxy for sources and streams. Format: «http://login:password@your.proxy:port». The «login/password» values are optional. Supported protocols: http, https, socks5.\nStream settings for individual sources # Stream settings such as:\nThreads job timeout General HTTP timeout HLS segment timeout HLS segment queue threshold Stream retry count HLS live edge HLS Stream Data HLS Live Restart can be set individually for each source on the «Sources» page (icon next to the source name). In this case, there is no need to click «Apply Settings»; the changes take effect immediately.\nThese same parameters do not require a reload on the «Settings» page either.\nThe «Default» button in the «Streamer settings» form returns all individual stream settings for the source to the main settings on the «Settings» page.\nPlaylist URL – allows you to change the URL address of the source.\nUser-Agent – allows you to set the “User-Agent” option for each source (streams within this source) individually. This overrides the «Main User-Agent» option.\n«Disable load icons» — disables fetching channel icons from the source. Some sources may have invalid icon addresses specified. This leads to a delay (depending on your browser) in displaying channel lists in the program\u0026rsquo;s web interface.\n«Repeat source streams» — allows you to set the number of times a stream playback will be repeated during failures. This option is not related to the Streamlink option «Stream retry count». The value «always» means that repeats are unlimited, «0» — the function is disabled (by default), other values are the number of repeats.\nIf your channel has only one stream and if that stream is working in some way, «TVLINK» will endlessly try to restart that stream. The «Repeat source streams» function does the same for the source (the stream of this source) of a channel where there is more than one stream. Thus, switching to the next stream of this channel will occur if either the stream has completely stopped working or after the number of repetitions you have selected. If «always» is selected — then only if the stream has stopped providing anything at all.\nChanges to these field settings take effect immediately after the field loses focus.\nExplanation of stream configuration # First, let\u0026rsquo;s define the differences between connection timeouts and read data timeouts (Connect timeout and Read Data timeout).\n«Connect timeout» When a client (in this case, TVLINK is a client in relation to the server from which it requests streams) initiates a connection, it must receive a response from the server (a specific response code). It does not matter what specific response comes from the server. This could be a 200 (connection established), 302 (redirection), or any other response, the main thing is that the server responds. If a response from the server is not received within the time period specified in the connect timeout (connection timeout period), the client drops the connection.\n«Read Data timeout» When the client receives a 200 (connection established) response from the server, it begins to download (read) the data that the server sends. If the server does not transmit information within the time period specified in the read data timeout (read data timeout period), the client drops the connection.\nNow let\u0026rsquo;s define the stream formats.\nThe most common ones are TS and HLS.\n«TS» Essentially, this is the same as if you were downloading any file in a browser. The client makes a request and, if it receives a 200 response, simply receives the data sequentially. The data is transmitted in a single stream, and if traffic issues arise, this causes problems with the video playback as well. That is, for IPTV over the internet, this is not the best solution. It is more suitable for a local network.\n«HLS» This is the same «TS» (simplified, of course), but cut into chunks (segments). Due to the fact that these segments are already recorded files (unlike TS, which is transmitted in real-time) and there are several of them, the client has the ability to download multiple segments simultaneously. This, in turn, helps to cope with traffic problems and, accordingly, is better suited for IPTV over the internet.\nNow, directly about the «TVLINK» parameters.\n«General HTTP timeout Connect/Data» If you have a TS stream, these timeouts will be applied. «HLS segment» timeouts will not be used for such streams. If you have an HLS stream, the «General HTTP» timeouts will work when you receive playlists with a list of segments or stream quality options (the provider may offer several stream quality options for different connection speeds). We call playlists text files that contain links to other playlists (for example, if it is a list of stream qualities) or links to video segments.\n«HLS segment timeout Connect/Data» These timeouts are applied directly to segments (video files). Although the name of this parameter includes «HLS», these timeouts also work with other segmented stream formats, for example, «DASH».\nIn a simple case (without a stream quality list) for HLS streams, it will look like this:\ngetting the segment list – «General HTTP timeout» downloading segment 1 – «HLS segment timeout» downloading segment 2 – «HLS segment timeout» downloading segment 3 – «HLS segment timeout» getting a new segment list – «General HTTP timeout» downloading segment 4 – «HLS segment timeout» downloading segment 5 – «HLS segment timeout» downloading segment 6 – «HLS segment timeout» getting a new segment list – «General HTTP timeout» and so on…\n«HLS segment queue threshold» This parameter (timeout) also applies to HLS streams. The HLS segment list (playlist) contains a variable indicating the duration of the video in the segment. This variable is used by «TVLINK» to determine after what time to request a new segment file. The server constantly updates this list immediately after a new segment recording is finished. «HLS segment queue threshold» - this is the number by which the segment duration variable will be multiplied. If the segment list on the server is not updated within the time obtained by this multiplication, the client will drop the connection. For example, the list specifies that the segment duration is 6 seconds. If the «HLS segment queue threshold» is set to three, the client will drop the connection after 18 seconds if a new segment does not appear on the server.\n«Threads job timeout» This is the timeout of the internal «Streamlink» loop that reads data from the input and writes it to the output stream. If no data passes through the loop within the specified time, it stops working, which results in the closure of any connection.\n«Stream retry count» This is the number of connection retries when the «General HTTP» and «HLS segment» timeouts are triggered.\nFFmpeg transcode stream # If «FFmpeg» is installed on your system, you have the option to enable the «FFmpeg transcode stream» module.\nOptions are FFmpeg command-line parameters. Field descriptions:\n«Before input» – parameters for hardware transcoding «Video encoder» – video encoder parameters «Audio encoder» – audio encoder parameters To understand how these parameters will be inserted into the «FFmpeg» command line, here is an example (simplified scheme):\n/usr/bin/ffmpeg -err_detect ignore_err -stream_loop -1 [Before input] -i http://channel.stream -c:v [Video encoder] -c:a [Audio encoder] -ignore_unknown -map 0:v -map 0:a -f mpegts By default, the «Video encoder» and «Audio encoder» fields contain the “copy” parameter. That is, if these fields are left empty, the value “copy” will be set (skip the stream without transcoding).\nBefore setting values, make sure that «FFmpeg» on your system supports the respective parameters. For example, execute the command:\nffmpeg -hide_banner -encoders to view the available audio and video encoders.\nIf the processor in your system (for example, Intel Pentium N5000) supports hardware stream encoding, you can apply the following settings, for example.\n«Before input»:\n-hwaccel vaapi -hwaccel_output_format vaapi -hwaccel_device /dev/dri/renderD128 «Video encoder»:\nh264_vaapi -r 50 «Audio encoder»:\naac -b:a 96k After applying the settings («Apply Settings»), on the «About» page a link to «M3U FFmpeg Playlist» will appear (format: http://ip-address:port/ffmpeglist).\nEnabling «FFmpeg transcode stream» does not affect the main broadcasting module. They work in parallel. You can simultaneously connect some clients to the regular playlist (playlist) and others to the «FFmpeg» playlist (ffmpeglist).\nYou can always get the playlist via the link «http://ip-address:port/ffmpeglist», even if «FFmpeg transcode stream» is disabled and «FFmpeg» is not installed on the system. Therefore, be careful.\nIf you enable «Debug Streams» and run «TVLINK» from the command line, information from «FFmpeg» (encoding parameters, errors, etc.) will be displayed when the stream stops.\nEPG Update # These settings are responsible for the periodic update of the «EPG».\n«Auto update EPG» – enable/disable automatic periodic EPG update.\n«Update period EPG» – select the update period from the list in hours, or once a day (at night).\n"},{"id":13,"href":"/docs/tvlink/docs/status/","title":"Work Status and Program Updates","section":"TVLINK","content":" Work Status and Program Updates # This information pertains to the settings on the «Status» and «About» pages.\nProgram Work Status # The table at the top of the «Status» page displays information about the program\u0026rsquo;s usage of system resources.\nBy default, the information is updated every 5 seconds. You can select the desired interval from the «Refresh page (sec)» list.\n«TVLINK uptime» – the time elapsed since the program was started (settings initialized). «TVLINK uses memory» – the amount of RAM the program is using (in megabytes). «TVLINK open sockets» – the number of currently open sockets. «Free system memory» – the percentage of free RAM in the system. This refers to the entire system and its processes. If stream broadcasting is currently in progress (clients are connected to the server), the «Active streams» table is displayed.\n«Client» – the client\u0026rsquo;s IP address and port. «Channel» – the channel being broadcast to the client. «Source» – the source from which the stream is being broadcast. «Start Time» – the time when the broadcast was started. «URL» – the address from which «TVLINK» retrieves the stream. The red icon in the «Client» column allows switching the broadcast to the next stream for the client.\nThe «View program Logs» link (at the bottom of the page) opens the program\u0026rsquo;s log page.\nProgram Update # The «About» page displays the program version, as well as links to download the playlist and EPG.\nIf a new version of the program is available, information about it and an «Update» icon will appear. Click this icon and wait for the program to update.\nDuring the update, all settings are preserved. Just in case, you can save your settings by copying the «tvlink/data» directory and restore it if necessary.\n"},{"id":14,"href":"/docs/tvlink/docs/pvr-tvlink-client/","title":"PVR TVLINK Client","section":"TVLINK","content":" PVR TVLINK Client for Kodi # As a client (IPTV player) for «TVLINK», the «PVR TVLINK Client» for «Kodi» is the most suitable. Only with this client will you get all the features of the «TVLINK» server. Such as, for example, seamless switching of streams for the user (in case of broadcast failures) of the same channel with different audio and video formats. The client supports Timeshift (pause/rewind), IPTV archives, and EPG.\nThe client code is based on «PVR IPTV Simple» but is designed to meet all the requirements of «TVLINK». For example, the client will never disconnect from the «TVLINK» server on its own. This will only happen when the user switches the channel or stops the channel broadcast.\nA modified version of «Kodi» is required for «PVR TVLINK Client» to work; it will not function with the original version of «Kodi».\nConfiguration # «General» # «TVLINK IP-address» – the IP address of the «TVLINK» server.\n«TVLINK port» – the port of the «TVLINK» server.\n«TVLINK profile» – the user profile on the «TVLINK» server. If not specified, the main profile (main) is used.\n«Auth. Token» – the authorization token, if required.\n«FFmpeg playlist» – enable if you want to receive broadcasts that will be processed by the ffmpeg module of «TVLINK».\n«Streams» # «TVLINK connection timeout» – the connection timeout of the client to the «TVLINK» server for retrieving the channel list. This option does not affect broadcasts.\n«Buffering streams» – if activated, the client will additionally buffer streams (using Kodi\u0026rsquo;s capabilities).\n«FFmpegDirect for Timeshift» – enables the Timeshift function via the «Inputstream FFmpeg Direct» addon.\n«FFmpegDirect for Catchup» – enables the Catchup function via the «Inputstream FFmpeg Direct» addon.\nThe last two options («FFmpegDirect for \u0026hellip;») will only work if the «Inputstream FFmpeg Direct» addon is installed. Otherwise, the client will ignore them.\n«Timeshift» only works when the «FFmpegDirect for Timeshift» option is enabled. For IPTV archives (Catchup) to function, the «FFmpegDirect for Catchup» option is not mandatory.\nThe «Inputstream FFmpeg Direct» addon currently does not work correctly on some architectures, such as Intel. If you activate «FFmpegDirect for Timeshift», the automatic stream switching within a channel will stop working. The «Inputstream FFmpeg Direct» addon, through which the streams will pass, cannot automatically change stream parameters.\nAll other settings are the same as in the «PVR IPTV Simple» client.\n"},{"id":15,"href":"/docs/tvlink/docs/tvlink-conrol/","title":"TVLINK Simple Control","section":"TVLINK","content":" «TVLINK Simple Control» Addon for Kodi # The addon can be installed from the «AlexELEC Common Add-ons» repository, which is present in «LibreELEC/CoreELEC (ae-fork)» systems.\nAllows you to control channel streams (turn on/off) and shows (highlights in yellow) the link to the stream that is currently being broadcast.\nIt also provides the ability to:\nsequentially switch channel streams; update «TVLINK» channel sources; display information about clients connected to «TVLINK»; display information about RAM and socket usage. Configuration # «IP-address TVLINK» – the IP address of the «TVLINK» server «Port TVLINK» – the port of the «TVLINK» server If «IP-address TVLINK» is not specified, «TVLINK Simple Control» uses the address «127.0.0.1».\nIn modified (ae-fork) ELEC systems, the addon is called by a long press of the «i» (info) button on the keyboard. For remote controls in these systems, the following settings are made in the «keyboard.xml» file in Kodi.\n\u0026lt;FullscreenLiveTV\u0026gt; \u0026lt;keyboard\u0026gt; … \u0026lt;i mod=\u0026quot;longpress\u0026quot;\u0026gt;RunAddon(script.tvlink.conrol)\u0026lt;/i\u0026gt; \u0026lt;/keyboard\u0026gt; \u0026lt;/FullscreenLiveTV\u0026gt; "},{"id":16,"href":"/docs/tvlink/docs/addons-api/","title":"TVLINK Add-ons API","section":"TVLINK","content":" General Information # To create your own add-on, click the «Add addon» button on the «Sources» page. In the «Add new addon» window, enter the name of the future add-on. It must be written in Latin letters, without special symbols (spaces, hyphens, etc.) and cannot start with a digit.\nClick «Save changes».\nIf an add-on with such a name (meaning only the file name without the «.py» extension) does not exist in the repository, an empty file will be created in the «tvlink/scrapers» directory. For example, «tvlink/scrapers/Test.py».\nAdd-ons API # The «utils» module (from TVLINK), which provides the necessary functions, must be connected in the add-on.\n# -*- coding: utf-8 -*- import os, sys from pathlib import Path root_dir = os.path.dirname(sys.argv[0]) sys.path.append(root_dir) import utils from utils import DEF_BROWSER # User-Agent: \u0026quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Firefox\u0026quot; Also, a «Scraper» class with the mandatory functions «channels()» and «getLink()» must be declared.\nclass Scraper: def __init__(self): # Optional function self.source = Path(__file__).stem # Add-on name self.link = f'ext:{self.source}:' # Channel URL prefix self.headers = {'User-Agent': DEF_BROWSER} # User-Agent for the add-on def getHeaders(self): # Optional function return self.headers def Channels(self): LL = [] RET_STATUS = False ... for cnLine in L: chTitle = cnLine.name # Channel name chLogo = cnLine.icon # Channel logo chGroup = cnLine.group # Channel group chID = utils.title_to_crc32(chTitle) # Channel ID chUrl = f\u0026quot;{self.link}{cnLine.link}\u0026quot; # Channel stream link LL.append((chID, chTitle, chGroup, chUrl, chLogo)) if LL: # Loading channels into the TVLINK database utils.ch_inputs_DB(self.source, LL) RET_STATUS = True # Returns «True» if the channels were loaded into the database return RET_STATUS def getLink(self, url): ... return url Everything else (classes, functions, variables, etc.) you can write at your discretion.\nFunction Channels() # Called by «TVLINK» when it is necessary to create a \u0026ldquo;channel map\u0026rdquo;. For example, when you click the «Update» button of a source.\nMust return «True» or «False» depending on whether the channels were loaded into the database.\nFunction utils.title_to_crc32() # The function takes the channel name (chTitle) as an argument and returns the channel ID (chID).\nFunction utils.ch_inputs_DB() # The function takes two arguments:\nthe source name (must match the add-on file name), self.source — in the example a list of tuples, which enumerates the channel parameters, LL — in the example The tuple must be formed in the following format and order:\nLL = ( (chID, chTitle, chGroup, chUrl, chLogo), ) chID - channel identifier chTitle - channel name chGroup - channel group chUrl - channel URL chLogo - channel icon URL Of the mandatory ones here: chID, chTitle, and chUrl. Essentially, you need to take at least two values from the website (for which you are writing the plugin) – chTitle and chUrl. To obtain chID, you need to use the utils.title_to_crc32() function, which will return the channel identifier. The remaining variables can contain an empty string.\n«chUrl» (channel URL) — must be formed in the following format:\next:add-on_name:http://channel_link For example, if the add-on is called «Test», and the link to the desired channel is «http://tv.site.com/channel-1.html», then «chUrl» will look like this:\next:Test:http://tv.site.com/channel-1.html When «TVLINK» turns on a channel using this link, it understands (by the «ext:Test» prefix) that it needs to call the «getLink()» function from the «Test» add-on and pass the link «http://tv.site.com/channel-1.html» to it as an argument.\nFunction getLink() # The function takes a link to the channel (chUrl) as an argument and returns a link to the actual stream address.\nIn a simple case, the link to the channel and the stream can be the same. Therefore, the function can look like this (what was received is what was returned).\ndef getLink(self, lnk): return lnk In practice, this happens extremely rarely. Usually, stream links are generated dynamically on the website when the channel page is opened, and they are new each time. In this function, you must find such a link and return it to «TVLINK» so that it can \u0026ldquo;play\u0026rdquo; it.\nBeautifulSoup Module # It is convenient to use the «BeautifulSoup» module for parsing website pages. If you wish to use this module in your plugin, it needs to be connected. This is done as follows:\n# -*- coding: utf-8 -*- import os, sys root_dir = os.path.dirname(sys.argv[0]) libs_dir = os.path.join(root_dir, 'libs') ssv_file = os.path.join(libs_dir, 'soupsieve.whl') bs4_file = os.path.join(libs_dir, 'beautifulsoup.whl') sys.path.append(root_dir) sys.path.append(libs_dir) sys.path.insert(0, ssv_file) sys.path.insert(0, bs4_file) from bs4 import BeautifulSoup "}]